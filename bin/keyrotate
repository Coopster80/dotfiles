#!/bin/bash
# shellcheck disable=SC2029

# Color codes and handy snippets
RED='\e[1;31m'
GREEN='\e[1;32m'
RESET='\e[0m'
TICK="\r [${GREEN}✓${RESET}]"
CROSS="\r [${RED}✗${RESET}]"
INFO="\r [i]"

# Configuration
TEMP_DIR="${HOME}/keyrotate-temp"
KEY_COMMENT="$(whoami)@$(hostname)-$(date +%m-%d-%Y)"
TIMEOUT="10"
DEPENDENCIES=(timeout ssh-keygen ssh-copy-id)

if [ $# -eq 0 ]; then
	echo "${CROSS} Please provide at least one hostname"
	exit 1
fi


echo -ne "${INFO} Checking for dependencies..."
for DEPENDENCY in "${DEPENDENCIES[@]}"
do
	command -v "${DEPENDENCY}" > /dev/null
	EXIT_CODE=$?
	if [ $EXIT_CODE -ne 0 ]; then
		echo -e "${CROSS} ${DEPENDENCY} is not installed or cannot be found on this system"
		exit $EXIT_CODE
	fi
done
echo -e "${TICK}"

echo -ne "${INFO} Checking that all hosts are available..."
for TARGET_HOST in "$@"
do
	timeout "${TIMEOUT}" ssh "$TARGET_HOST" : >/dev/null 2>&1
	EXIT_CODE=$?
	if [ $EXIT_CODE -eq 124 ]; then
		echo -e "${CROSS} Could not connect to host ${TARGET_HOST} after ${TIMEOUT} seconds"
		exit $EXIT_CODE
	fi
	if [ $EXIT_CODE -eq 255 ]; then
		echo -e "${CROSS} Could not resolve host ${TARGET_HOST}                 "
		exit $EXIT_CODE
	fi
	if [ $EXIT_CODE -ne 0 ]; then
		echo -e "${CROSS} An error occured while accessing host ${TARGET_HOST}  "
		exit $EXIT_CODE
	fi
done
echo -e "${TICK}"

echo -ne "${INFO} Generating new key..."
if [ -d "${TEMP_DIR}" ]; then rm -Rf "${TEMP_DIR}"; fi
mkdir "${TEMP_DIR}"
ssh-keygen -o -q -a 100 -t ed25519 -f "${TEMP_DIR}"/id_ed25519 -C "${KEY_COMMENT}" -N ""
ESCAPED_OLD_PUB_KEY=$(sed -e 's/[]\/$*.^[]/\\&/g' < "${HOME}"/.ssh/id_ed25519.pub);
CLEANUP_CMD="sed -i '/${ESCAPED_OLD_PUB_KEY}/d' ~/.ssh/authorized_keys"
echo -e "${TICK}"

echo -ne "${INFO} Adding new key to hosts..."
for TARGET_HOST in "$@"
do
	timeout "${TIMEOUT}" ssh-copy-id -i "${TEMP_DIR}"/id_ed25519.pub "${TARGET_HOST}" >/dev/null 2>&1
	EXIT_CODE=$?
	if [ $EXIT_CODE -ne 0 ]; then
		echo -e "${CROSS} An error occured while adding key to host ${TARGET_HOST}"
		exit $EXIT_CODE
	fi
done
echo -e "${TICK}"

echo -ne "${INFO} Checking that new key works on each host..."
for TARGET_HOST in "$@"
do
	ssh -i "${TEMP_DIR}"/id_ed25519 "$TARGET_HOST" : >/dev/null 2>&1
	EXIT_CODE=$?
	if [ $EXIT_CODE -ne 0 ]; then
		echo -e "${CROSS} An error occured while accessing host ${TARGET_HOST}  "
		exit $EXIT_CODE
	fi
done
echo -e "${TICK}"

echo -ne "${INFO} Removing old key from hosts..."
for TARGET_HOST in "$@"
do
	ssh "${TARGET_HOST}" "${CLEANUP_CMD}" >/dev/null 2>&1
	EXIT_CODE=$?
	if [ $EXIT_CODE -ne 0 ]; then
		echo -e "${CROSS} An error occured while removing old key on host ${TARGET_HOST}"
		exit $EXIT_CODE
	fi
done
echo -e "${TICK}"

echo -ne "${INFO} Cleaning up..."
rm -rf ~/.ssh/id_ed25519*
mv "${TEMP_DIR}"/* ~/.ssh/
rmdir "${TEMP_DIR}"
echo -e "${TICK}"
